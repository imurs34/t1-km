{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/t1_km/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/t1_km/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/t1_km/components/Video.jsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from \"lodash\";\nimport styled, { css } from \"styled-components\";\nimport { Rnd } from \"react-rnd\";\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { useAtom } from \"jotai\";\nimport { activityAtom, currentAtom, currentTimeAtom, durationAtom, durationTimeAtom, lockAtom, percentAtom, playingAtom, withVideoAtom } from \"../atom\";\n\nfunction Video(_ref, ref) {\n  _s();\n\n  var src = _ref.src,\n      content = _ref.content,\n      videoLocation = _ref.videoLocation;\n\n  var _useState = useState({\n    width: \"auto\",\n    height: \"auto\",\n    x: 100,\n    y: 100\n  }),\n      positionState = _useState[0],\n      setPositionState = _useState[1];\n\n  var _useAtom = useAtom(withVideoAtom),\n      _useAtom2 = _slicedToArray(_useAtom, 1),\n      withVideo = _useAtom2[0];\n\n  var _useAtom3 = useAtom(activityAtom),\n      _useAtom4 = _slicedToArray(_useAtom3, 2),\n      activity = _useAtom4[0],\n      setActivity = _useAtom4[1];\n\n  var _useAtom5 = useAtom(currentTimeAtom),\n      _useAtom6 = _slicedToArray(_useAtom5, 2),\n      currentTime = _useAtom6[0],\n      setCurrentTime = _useAtom6[1];\n\n  var _useAtom7 = useAtom(durationTimeAtom),\n      _useAtom8 = _slicedToArray(_useAtom7, 2),\n      durationTime = _useAtom8[0],\n      setDurationTime = _useAtom8[1];\n\n  var _useAtom9 = useAtom(durationAtom),\n      _useAtom10 = _slicedToArray(_useAtom9, 2),\n      duration = _useAtom10[0],\n      setDuration = _useAtom10[1];\n\n  var _useAtom11 = useAtom(percentAtom),\n      _useAtom12 = _slicedToArray(_useAtom11, 2),\n      percent = _useAtom12[0],\n      setPercent = _useAtom12[1];\n\n  var _useAtom13 = useAtom(currentAtom),\n      _useAtom14 = _slicedToArray(_useAtom13, 2),\n      current = _useAtom14[0],\n      setCurrent = _useAtom14[1];\n\n  var _useState2 = useState(false),\n      fixed = _useState2[0],\n      setFixed = _useState2[1];\n\n  var _useState3 = useState(true),\n      viable = _useState3[0],\n      setViable = _useState3[1];\n\n  var _useState4 = useState(),\n      nodeVideoLocation = _useState4[0],\n      setNodeVideoLocation = _useState4[1];\n\n  var _useAtom15 = useAtom(lockAtom),\n      _useAtom16 = _slicedToArray(_useAtom15, 1),\n      lock = _useAtom16[0];\n\n  var setFixedTrue = function setFixedTrue() {\n    setFixed(true);\n  };\n\n  var _useAtom17 = useAtom(playingAtom),\n      _useAtom18 = _slicedToArray(_useAtom17, 2),\n      play = _useAtom18[0],\n      setPlay = _useAtom18[1];\n\n  var videoRef = useRef();\n  useEffect(function () {\n    if (!nodeVideoLocation) {\n      setViable(false);\n      return;\n    } else {\n      setViable(true);\n    }\n\n    if (fixed) {\n      return;\n    }\n\n    var _nodeVideoLocation = _slicedToArray(nodeVideoLocation, 4),\n        w = _nodeVideoLocation[2],\n        h = _nodeVideoLocation[3];\n\n    var targetWidth = window.innerWidth * 0.2;\n    var targetHeight = targetWidth / w * h;\n    setPositionState(function (prev) {\n      return {\n        width: \"\".concat(targetWidth, \"px\"),\n        height: \"\".concat(targetHeight, \"px\"),\n        x: window.innerWidth - targetWidth,\n        y: window.innerHeight - targetHeight - 70\n      };\n    });\n  }, [nodeVideoLocation, fixed]);\n  useImperativeHandle(ref, function () {\n    return {\n      move: function move() {\n        videoRef.current.play();\n        setTimeout(function () {\n          if (!play) {\n            videoRef.current.pause();\n            setPlay(false);\n          }\n        }, 100);\n      },\n      toggle: function toggle() {\n        if (play) {\n          videoRef.current.pause();\n          setPlay(false);\n        } else {\n          videoRef.current.play();\n          setPlay(true);\n        }\n      },\n      jump: function jump(percentPoint) {\n        var time = percentPoint * duration;\n        setPercent(percentPoint);\n        videoRef.current.currentTime = time;\n        videoRef.current.play();\n        setTimeout(function () {\n          if (!play) {\n            videoRef.current.pause();\n            setPlay(false);\n          }\n        }, 100);\n\n        var slide = _.findLastIndex(content, function (obj) {\n          return obj.start_time < time;\n        });\n\n        var action = \"jump\";\n        setActivity({\n          slide: slide,\n          action: action,\n          time: time,\n          play: play\n        });\n      }\n    };\n  }, [videoRef.current, play, duration]);\n\n  var onTimeEvent = function onTimeEvent() {\n    var video = videoRef.current;\n    var time = video.currentTime;\n\n    var slide = _.findLastIndex(content, function (obj) {\n      return obj.start_time < time;\n    });\n\n    var vl = _.findLast(videoLocation, function (obj) {\n      return obj.start_time < time;\n    });\n\n    if (vl && vl.box_info) {\n      setNodeVideoLocation(vl.box_info);\n    } else {\n      setNodeVideoLocation(false);\n    }\n\n    var action = activity.slide === slide ? \"playing\" : \"flip\";\n    setActivity({\n      slide: slide,\n      action: action,\n      time: time\n    });\n    var percentPoint = time / video.duration;\n    var minutes = Math.floor(time / 60);\n    var seconds = Math.floor(time - 60 * minutes).toString().padStart(2, \"0\");\n    setCurrentTime(\"\".concat(minutes, \":\").concat(seconds));\n    setPercent(percentPoint * 100);\n  };\n\n  var loaded = function loaded(e) {\n    var targetDue = e.currentTarget.duration;\n    setDuration(targetDue);\n    var _e$currentTarget = e.currentTarget,\n        videoWidth = _e$currentTarget.videoWidth,\n        videoHeight = _e$currentTarget.videoHeight;\n    var targetWidth = window.innerWidth * 0.2;\n    var targetHeight = targetWidth / videoWidth * videoHeight; // setPositionState((prev) => ({ width: `${targetWidth}px`, height: `${targetHeight}px`, x: window.innerWidth - targetWidth, y: window.innerHeight - targetHeight - 50 }));\n\n    var minutes = Math.floor(targetDue / 60);\n    var seconds = Math.floor(targetDue - 60 * minutes).toString().padStart(2, \"0\");\n    setDurationTime(\"\".concat(minutes, \":\").concat(seconds));\n  };\n\n  useEffect(function () {\n    if (videoRef.current) {\n      videoRef.current.currentTime = activity.time;\n      videoRef.current.pause();\n      setPlay(false);\n    }\n  }, [videoRef]);\n  return /*#__PURE__*/_jsxDEV(CustomRnd, {\n    visiable: viable,\n    size: {\n      width: positionState.width,\n      height: positionState.height,\n      background: \"red\"\n    },\n    position: {\n      x: positionState.x,\n      y: positionState.y\n    },\n    onDragStart: setFixedTrue,\n    onResizeStart: setFixedTrue,\n    bounds: \".frame\",\n    enableResizing: !lock,\n    disableDragging: lock,\n    onDragStop: function onDragStop(e, d) {\n      setPositionState(_objectSpread(_objectSpread({}, positionState), {}, {\n        x: d.x,\n        y: d.y\n      }));\n    },\n    onResizeStop: function onResizeStop(e, direction, ref, delta, position) {\n      setPositionState(_objectSpread({\n        width: ref.style.width,\n        height: ref.style.height\n      }, position));\n    },\n    children: /*#__PURE__*/_jsxDEV(VideoEl, {\n      src: src,\n      onTimeUpdate: onTimeEvent,\n      ref: videoRef,\n      active: withVideo,\n      playsInline: true,\n      isDrag: true,\n      onLoadedMetadata: loaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Video, \"tCrsaL5PMjQEwvZskzlu6XcCUY8=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useImperativeHandle];\n});\n\n_c = Video;\nvar CustomRnd = styled(Rnd).withConfig({\n  displayName: \"Video__CustomRnd\",\n  componentId: \"sc-16yaw0k-0\"\n})([\"box-sizing:border-box;z-index:100;visibility:\", \";\"], function (props) {\n  return props.visiable ? \"visiable\" : \"hidden\";\n});\n_c2 = CustomRnd;\nvar VideoEl = styled.video.withConfig({\n  displayName: \"Video__VideoEl\",\n  componentId: \"sc-16yaw0k-1\"\n})([\"margin-left:auto;display:block;opacity:0;height:inherit;max-width:100%;\", \" \", \"\"], function (props) {\n  return props.active && css([\"opacity:1;\"]);\n}, function (props) {\n  return props.isDrag && css([\"height:100%;width:100%;object-fit:fill;\"]);\n});\n_c3 = VideoEl;\nexport default _c4 = /*#__PURE__*/forwardRef(Video);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Video\");\n$RefreshReg$(_c2, \"CustomRnd\");\n$RefreshReg$(_c3, \"VideoEl\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/t1_km/components/Video.jsx"],"names":["_","styled","css","Rnd","forwardRef","useEffect","useImperativeHandle","useRef","useState","useAtom","activityAtom","currentAtom","currentTimeAtom","durationAtom","durationTimeAtom","lockAtom","percentAtom","playingAtom","withVideoAtom","Video","ref","src","content","videoLocation","width","height","x","y","positionState","setPositionState","withVideo","activity","setActivity","currentTime","setCurrentTime","durationTime","setDurationTime","duration","setDuration","percent","setPercent","current","setCurrent","fixed","setFixed","viable","setViable","nodeVideoLocation","setNodeVideoLocation","lock","setFixedTrue","play","setPlay","videoRef","w","h","targetWidth","window","innerWidth","targetHeight","prev","innerHeight","move","setTimeout","pause","toggle","jump","percentPoint","time","slide","findLastIndex","obj","start_time","action","onTimeEvent","video","vl","findLast","box_info","minutes","Math","floor","seconds","toString","padStart","loaded","e","targetDue","currentTarget","videoWidth","videoHeight","background","d","direction","delta","position","style","CustomRnd","props","visiable","VideoEl","active","isDrag"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport styled, { css } from \"styled-components\";\nimport { Rnd } from \"react-rnd\";\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { useAtom } from \"jotai\";\n\nimport { activityAtom, currentAtom, currentTimeAtom, durationAtom, durationTimeAtom, lockAtom, percentAtom, playingAtom, withVideoAtom } from \"../atom\";\n\nfunction Video({ src, content, videoLocation }, ref) {\n    const [positionState, setPositionState] = useState({\n        width: \"auto\",\n        height: \"auto\",\n        x: 100,\n        y: 100,\n    });\n    const [withVideo] = useAtom(withVideoAtom);\n    const [activity, setActivity] = useAtom(activityAtom);\n    const [currentTime, setCurrentTime] = useAtom(currentTimeAtom);\n    const [durationTime, setDurationTime] = useAtom(durationTimeAtom);\n    const [duration, setDuration] = useAtom(durationAtom);\n    const [percent, setPercent] = useAtom(percentAtom);\n    const [current, setCurrent] = useAtom(currentAtom);\n    const [fixed, setFixed] = useState(false);\n    const [viable, setViable] = useState(true);\n    const [nodeVideoLocation, setNodeVideoLocation] = useState();\n    const [lock] = useAtom(lockAtom);\n    const setFixedTrue = () => {\n        setFixed(true);\n    };\n\n    const [play, setPlay] = useAtom(playingAtom);\n    const videoRef = useRef();\n    useEffect(() => {\n        if (!nodeVideoLocation) {\n            setViable(false);\n            return;\n        } else {\n            setViable(true);\n        }\n        if (fixed) {\n            return;\n        }\n        const [, , w, h] = nodeVideoLocation;\n        const targetWidth = window.innerWidth * 0.2;\n        const targetHeight = (targetWidth / w) * h;\n        setPositionState((prev) => ({ width: `${targetWidth}px`, height: `${targetHeight}px`, x: window.innerWidth - targetWidth, y: window.innerHeight - targetHeight - 70 }));\n    }, [nodeVideoLocation, fixed]);\n    useImperativeHandle(\n        ref,\n        () => ({\n            move: () => {\n                videoRef.current.play();\n                setTimeout(() => {\n                    if (!play) {\n                        videoRef.current.pause();\n                        setPlay(false);\n                    }\n                }, 100);\n            },\n            toggle: () => {\n                if (play) {\n                    videoRef.current.pause();\n                    setPlay(false);\n                } else {\n                    videoRef.current.play();\n                    setPlay(true);\n                }\n            },\n            jump: (percentPoint) => {\n                const time = percentPoint * duration;\n                setPercent(percentPoint);\n                videoRef.current.currentTime = time;\n                videoRef.current.play();\n                setTimeout(() => {\n                    if (!play) {\n                        videoRef.current.pause();\n                        setPlay(false);\n                    }\n                }, 100);\n                const slide = _.findLastIndex(content, (obj) => obj.start_time < time);\n                const action = \"jump\";\n                setActivity({ slide, action, time, play });\n            },\n        }),\n        [videoRef.current, play, duration]\n    );\n\n    const onTimeEvent = () => {\n        const video = videoRef.current;\n        const time = video.currentTime;\n        const slide = _.findLastIndex(content, (obj) => obj.start_time < time);\n        const vl = _.findLast(videoLocation, (obj) => obj.start_time < time);\n        if (vl && vl.box_info) {\n            setNodeVideoLocation(vl.box_info);\n        } else {\n            setNodeVideoLocation(false);\n        }\n        const action = activity.slide === slide ? \"playing\" : \"flip\";\n        setActivity({ slide, action, time });\n        const percentPoint = time / video.duration;\n        const minutes = Math.floor(time / 60);\n        const seconds = Math.floor(time - 60 * minutes)\n            .toString()\n            .padStart(2, \"0\");\n        setCurrentTime(`${minutes}:${seconds}`);\n        setPercent(percentPoint * 100);\n    };\n\n    const loaded = (e) => {\n        const targetDue = e.currentTarget.duration;\n        setDuration(targetDue);\n        const { videoWidth, videoHeight } = e.currentTarget;\n        const targetWidth = window.innerWidth * 0.2;\n        const targetHeight = (targetWidth / videoWidth) * videoHeight;\n        // setPositionState((prev) => ({ width: `${targetWidth}px`, height: `${targetHeight}px`, x: window.innerWidth - targetWidth, y: window.innerHeight - targetHeight - 50 }));\n        const minutes = Math.floor(targetDue / 60);\n        const seconds = Math.floor(targetDue - 60 * minutes)\n            .toString()\n            .padStart(2, \"0\");\n        setDurationTime(`${minutes}:${seconds}`);\n    };\n    useEffect(() => {\n        if (videoRef.current) {\n            videoRef.current.currentTime = activity.time;\n            videoRef.current.pause();\n            setPlay(false);\n        }\n    }, [videoRef]);\n\n    return (\n        <CustomRnd\n            visiable={viable}\n            size={{ width: positionState.width, height: positionState.height, background: \"red\" }}\n            position={{ x: positionState.x, y: positionState.y }}\n            onDragStart={setFixedTrue}\n            onResizeStart={setFixedTrue}\n            bounds={\".frame\"}\n            enableResizing={!lock}\n            disableDragging={lock}\n            onDragStop={(e, d) => {\n                setPositionState({ ...positionState, x: d.x, y: d.y });\n            }}\n            onResizeStop={(e, direction, ref, delta, position) => {\n                setPositionState({\n                    width: ref.style.width,\n                    height: ref.style.height,\n                    ...position,\n                });\n            }}\n        >\n            <VideoEl src={src} onTimeUpdate={onTimeEvent} ref={videoRef} active={withVideo} playsInline isDrag={true} onLoadedMetadata={loaded} />\n        </CustomRnd>\n    );\n}\n\nconst CustomRnd = styled(Rnd)`\n    box-sizing: border-box;\n    z-index: 100;\n    visibility: ${(props) => (props.visiable ? \"visiable\" : \"hidden\")};\n`;\n\nconst VideoEl = styled.video`\n    margin-left: auto;\n    display: block;\n    opacity: 0;\n    height: inherit;\n    max-width: 100%;\n    ${(props) =>\n        props.active &&\n        css`\n            opacity: 1;\n        `}\n\n    ${(props) =>\n        props.isDrag &&\n        css`\n            height: 100%;\n            width: 100%;\n            object-fit: fill;\n        `}\n`;\nexport default forwardRef(Video);\n"]},"metadata":{},"sourceType":"module"}