{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/t1_km/components/Controller.jsx\";\nimport styled, { css } from \"styled-components\";\nimport { DarkMode } from \"@styled-icons/material-sharp\";\nimport { Layout } from \"@styled-icons/feather\";\nimport { Lock as LockIcon } from \"@styled-icons/entypo\";\nimport { Mobile } from \"@styled-icons/boxicons-regular\";\nimport { Pause, Play } from \"@styled-icons/boxicons-regular\";\nimport { Revision } from \"@styled-icons/boxicons-regular\";\nimport { useAtom } from \"jotai\";\nimport ProgressBar from \"./ProgressBar\";\nimport { currentTimeAtom, darkModeAtom, durationTimeAtom, lockAtom, mobileModeAtom, percentAtom, playingAtom, withFrameAtom, withVideoAtom } from \"../atom\";\n\nfunction Controller({\n  reset,\n  togglePlay,\n  jump\n}) {\n  const [withFrame, setWithFrame] = useAtom(withFrameAtom);\n  const [darkMode, setDarkMode] = useAtom(darkModeAtom);\n  const [mobileMode, setMobileMode] = useAtom(mobileModeAtom);\n  const [currentTime] = useAtom(currentTimeAtom);\n  const [durationTime] = useAtom(durationTimeAtom);\n  const [lock, setLock] = useAtom(lockAtom);\n  const [withVideo, setWithVideo] = useAtom(withVideoAtom);\n  const [play, setPlay] = useAtom(playingAtom);\n\n  const toggleLock = () => {\n    setLock(!lock);\n  };\n\n  const toggleFrame = () => {\n    reset();\n    setWithFrame(!withFrame);\n  };\n\n  const toggleDarkMode = () => {\n    reset();\n    setDarkMode(!darkMode);\n  };\n\n  const toggleMobileMode = () => {\n    reset();\n    setMobileMode(!mobileMode);\n  };\n\n  const toggleVideo = () => {\n    reset();\n    setWithVideo(!withVideo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      jump: jump\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ButtonFull, {\n          onClick: togglePlay,\n          children: play ? /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 74\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Time, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [currentTime, \"/\", durationTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleMobileMode,\n          isactive: mobileMode,\n          children: /*#__PURE__*/_jsxDEV(Mobile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleDarkMode,\n          isactive: darkMode,\n          children: /*#__PURE__*/_jsxDEV(DarkMode, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleLock,\n          isactive: lock,\n          children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: reset,\n          children: /*#__PURE__*/_jsxDEV(Revision, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          onClick: toggleFrame,\n          isactive: withFrame,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          onClick: toggleVideo,\n          isactive: withVideo,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Instructor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\nconst ToggleButton = styled.div.withConfig({\n  displayName: \"Controller__ToggleButton\",\n  componentId: \"xqj9pg-0\"\n})([\"cursor:pointer;border:1px solid gray;display:flex;justify-content:center;align-items:center;padding-left:10px;padding-right:10px;margin-right:10px;> p{font-size:15px;}\", \";\"], props => props.isactive ? css([\"color:white;background-color:#5ca6d5;border-right:8px solid gray;\"]) : css([\"color:#7d7d7d;background-color:#e9eaeb;border-left:8px solid gray;\"]));\nconst Time = styled.div.withConfig({\n  displayName: \"Controller__Time\",\n  componentId: \"xqj9pg-1\"\n})([\"display:flex;color:white;width:100px;justify-content:center;align-items:center;> p{font-size:15px;}padding-top:4px;margin-right:10px;\"]);\nconst Container = styled.div.withConfig({\n  displayName: \"Controller__Container\",\n  componentId: \"xqj9pg-2\"\n})([\"*{font-size:9px;}display:flex;flex-direction:column;height:50px;padding-top:5px;padding-bottom:15px;\"]);\nconst Buttons = styled.div.withConfig({\n  displayName: \"Controller__Buttons\",\n  componentId: \"xqj9pg-3\"\n})([\"display:flex;height:30px;flex-direction:row;justify-content:space-between;> div{display:flex;}\"]);\nconst ButtonFull = styled.button.withConfig({\n  displayName: \"Controller__ButtonFull\",\n  componentId: \"xqj9pg-4\"\n})([\"cursor:pointer;width:35px;border:none;background-color:transparent;> svg{color:white;}\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"Controller__Button\",\n  componentId: \"xqj9pg-5\"\n})([\"cursor:pointer;width:40px;padding:5px 10px;border:1px solid gray;border-radius:4px;margin-left:5px;margin-right:5px;\", \";\"], props => props.isactive ? css([\"background-color:#5ca6d5;> svg{color:white;}\"]) : css([\"background-color:#c1c1c1;> svg{color:#717171;}\"]));\nexport default Controller;","map":{"version":3,"sources":["/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/t1_km/components/Controller.jsx"],"names":["styled","css","DarkMode","Layout","Lock","LockIcon","Mobile","Pause","Play","Revision","useAtom","ProgressBar","currentTimeAtom","darkModeAtom","durationTimeAtom","lockAtom","mobileModeAtom","percentAtom","playingAtom","withFrameAtom","withVideoAtom","Controller","reset","togglePlay","jump","withFrame","setWithFrame","darkMode","setDarkMode","mobileMode","setMobileMode","currentTime","durationTime","lock","setLock","withVideo","setWithVideo","play","setPlay","toggleLock","toggleFrame","toggleDarkMode","toggleMobileMode","toggleVideo","ToggleButton","div","props","isactive","Time","Container","Buttons","ButtonFull","button","Button"],"mappings":"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","sourcesContent":["import styled, { css } from \"styled-components\";\nimport { DarkMode } from \"@styled-icons/material-sharp\";\nimport { Layout } from \"@styled-icons/feather\";\nimport { Lock as LockIcon } from \"@styled-icons/entypo\";\nimport { Mobile } from \"@styled-icons/boxicons-regular\";\nimport { Pause, Play } from \"@styled-icons/boxicons-regular\";\nimport { Revision } from \"@styled-icons/boxicons-regular\";\nimport { useAtom } from \"jotai\";\n\nimport ProgressBar from \"./ProgressBar\";\nimport { currentTimeAtom, darkModeAtom, durationTimeAtom, lockAtom, mobileModeAtom, percentAtom, playingAtom, withFrameAtom, withVideoAtom } from \"../atom\";\n\nfunction Controller({ reset, togglePlay, jump }) {\n    const [withFrame, setWithFrame] = useAtom(withFrameAtom);\n    const [darkMode, setDarkMode] = useAtom(darkModeAtom);\n    const [mobileMode, setMobileMode] = useAtom(mobileModeAtom);\n    const [currentTime] = useAtom(currentTimeAtom);\n    const [durationTime] = useAtom(durationTimeAtom);\n\n    const [lock, setLock] = useAtom(lockAtom);\n    const [withVideo, setWithVideo] = useAtom(withVideoAtom);\n    const [play, setPlay] = useAtom(playingAtom);\n    const toggleLock = () => {\n        setLock(!lock);\n    };\n    const toggleFrame = () => {\n        reset();\n        setWithFrame(!withFrame);\n    };\n\n    const toggleDarkMode = () => {\n        reset();\n        setDarkMode(!darkMode);\n    };\n\n    const toggleMobileMode = () => {\n        reset();\n        setMobileMode(!mobileMode);\n    };\n\n    const toggleVideo = () => {\n        reset();\n        setWithVideo(!withVideo);\n    };\n\n    return (\n        <Container>\n            <ProgressBar jump={jump} />\n            <Buttons>\n                <div>\n                    <ButtonFull onClick={togglePlay}>{play ? <Pause /> : <Play />}</ButtonFull>\n                    <Time>\n                        <p>\n                            {currentTime}/{durationTime}\n                        </p>\n                    </Time>\n                    <Button onClick={toggleMobileMode} isactive={mobileMode}>\n                        <Mobile />\n                    </Button>\n                    <Button onClick={toggleDarkMode} isactive={darkMode}>\n                        <DarkMode />\n                    </Button>\n                    <Button onClick={toggleLock} isactive={lock}>\n                        <LockIcon />\n                    </Button>\n                    <Button onClick={reset}>\n                        <Revision />\n                    </Button>\n                </div>\n                <div>\n                    <ToggleButton onClick={toggleFrame} isactive={withFrame}>\n                        <p>Template</p>\n                    </ToggleButton>\n                    <ToggleButton onClick={toggleVideo} isactive={withVideo}>\n                        <p>Instructor</p>\n                    </ToggleButton>\n                </div>\n            </Buttons>\n        </Container>\n    );\n}\n\nconst ToggleButton = styled.div`\n    cursor: pointer;\n    border: 1px solid gray;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-left: 10px;\n    padding-right: 10px;\n    margin-right: 10px;\n    > p {\n        font-size: 15px;\n    }\n\n    ${(props) =>\n        props.isactive\n            ? css`\n                  color: white;\n                  background-color: #5ca6d5;\n                  border-right: 8px solid gray;\n              `\n            : css`\n                  color: #7d7d7d;\n                  background-color: #e9eaeb;\n                  border-left: 8px solid gray;\n              `};\n`;\n\nconst Time = styled.div`\n    display: flex;\n    color: white;\n    width: 100px;\n    justify-content: center;\n    align-items: center;\n    > p {\n        font-size: 15px;\n    }\n    padding-top: 4px;\n    margin-right: 10px;\n`;\nconst Container = styled.div`\n    * {\n        font-size: 9px;\n    }\n    display: flex;\n    flex-direction: column;\n    height: 50px;\n    padding-top: 5px;\n    padding-bottom: 15px;\n`;\nconst Buttons = styled.div`\n    display: flex;\n    height: 30px;\n    flex-direction: row;\n    justify-content: space-between;\n    > div {\n        display: flex;\n    }\n`;\n\nconst ButtonFull = styled.button`\n    cursor: pointer;\n    width: 35px;\n    border: none;\n    background-color: transparent;\n    > svg {\n        color: white;\n    }\n`;\n\nconst Button = styled.button`\n    cursor: pointer;\n    width: 40px;\n    padding: 5px 10px;\n    border: 1px solid gray;\n    border-radius: 4px;\n    margin-left: 5px;\n    margin-right: 5px;\n\n    ${(props) =>\n        props.isactive\n            ? css`\n                  background-color: #5ca6d5;\n                  > svg {\n                      color: white;\n                  }\n              `\n            : css`\n                  background-color: #c1c1c1;\n                  > svg {\n                      color: #717171;\n                  }\n              `};\n`;\n\nexport default Controller;\n"]},"metadata":{},"sourceType":"module"}